use frisbee_mod
use font_mod
use game

norm_mouse_pos :: fn -> (float, float) {
    ret (as_float(l_mouse()) / as_float(l_window_size()) - (0.5, 0.5)) * (2.0, -2.0)
}

dist :: fn a: (float, float), b: (float, float) -> float {
    ret sqrt! (a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1])
}

store_init :: fn -> (fn -> void, fn float -> void, fn -> void) {
    for_sale := [[1.0, 1.0, 1.0, 1.0]]
    prices := [0]
    MAX_STORE_ITEMS := 6
    baught_items := 1

    inflation :: fn -> int {
        flate := l_random_range(2, 3) + baught_items * baught_items / 8
        ret flate
    }

    calculate_price :: fn fb: [float] -> int {
        ret 2 + as_int(fb[0] * fb[0] * 10.0 + 3.0) * inflation() + as_int(fb[1] * fb[1] / 2.0 + 0.75) * inflation()
    }

    init :: fn {
        clear! for_sale
        clear! prices

        for i := 0, i < MAX_STORE_ITEMS, i += 1 {
            frisbee := [l_random(), l_random(), l_random(), l_random()]
            push! for_sale, frisbee

            price := calculate_price! frisbee
            push! prices, price
        }
    }

    update :: fn delta:float -> void {
    }

    draw :: fn -> void {

        mouse_pos := norm_mouse_pos!

        space := 0.55
        offset_x := 1.0 * space
        offset_y := 1.0 * space

        W := MAX_STORE_ITEMS / 2
        H := MAX_STORE_ITEMS / W
        for x := 0, x < W, x += 1 {
            for y := 0, y < H, y += 1 {
                index := y * W + x

                if prices[index] == 0 {
                    continue
                }

                fb := for_sale[index]


                draw_x := space * as_float(x) - offset_x
                draw_y := space * as_float(y) - offset_y


                d := dist((draw_x / 0.9, draw_y / 0.9), mouse_pos)
                draw_z := clamp! d * 5.0, 0.8, 1.0

                f := frisbee_mod.new! fb[0], fb[1], fb[2], fb[3]
                f.draw_stacked! draw_x, draw_y, draw_z

                bobbing := 0.0
                if d < 0.3 {
                    bobbing = 0.3 - d
                }
                font_x := draw_x - 0.05 + sin((l_time() + as_float(index)) * 1.23) * 0.03 * bobbing
                font_y := draw_y + 0.10 + cos((l_time() + as_float(index)) * 1.9) * 0.03 * bobbing
                font_mod.draw_num_tint(font_x, font_y, 0.07, -1, prices[index], 0, (0.0, 0.0, 0.0, 0.9))

                if l_input_released("hold") && d < 0.2 && game.pay(prices[index]) {
                    game.buy_frisbee! fb[0], fb[1], fb[2], fb[3]
                    prices[index] = 0
                    // GAME_STATE_PLAYING
                    game.start_transition! true, fn { game.set_game_state(0) }
                }

            }
        }
        game.draw_fish_money!
    }

    ret (init, update, draw)
}
