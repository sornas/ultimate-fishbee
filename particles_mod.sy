use game

water_particles :: fn -> (str, int) {
    PI :: 3.1415

    ps := l_gfx_particle_new!
    l_gfx_particle_lifetime! ps, (1.0, 1.0)

    l_gfx_particle_start_sx! ps, (0.015, 0.02)
    l_gfx_particle_start_sy! ps, (0.015, 0.02)
    l_gfx_particle_end_sx! ps, (0.0, 0.0)
    l_gfx_particle_end_sy! ps, (0.0, 0.0)

    l_gfx_particle_vel_angle! ps, (0.0 + PI/4.0, PI - PI/4.0)
    l_gfx_particle_acc_angle! ps, (-PI/2.0, -PI/2.0)

    l_gfx_particle_start_color! ps, (1.0, 1.0, 1.0)
    l_gfx_particle_end_color! ps, (1.0, 1.0, 1.0)

    l_gfx_particle_start_alpha! ps, (0.7, 0.5)
    l_gfx_particle_end_alpha! ps, (0.0, 0.0)

    ret ps
}

water_at :: fn ps: (str, int), pos: [float], boat_y: float -> void {
    size := 0.1 / pos[2]
    x := pos[0] / pos[2]
    y := max(pos[1] / pos[2], boat_y)

    l_gfx_particle_start_sx! ps, (size * 0.75, size)
    l_gfx_particle_start_sy! ps, (size * 0.75, size)

    l_gfx_particle_x! ps, (x, x)
    l_gfx_particle_y! ps, (y, y)
}

coin_particles :: fn -> (str, int) {
    PI :: 3.1415

    ps := l_gfx_particle_new!
    l_gfx_particle_lifetime! ps, (3.0, 4.0)

    l_gfx_particle_vel_angle! ps, (PI/2.0 - 1.0, PI/2.0 + 1.0)
    l_gfx_particle_vel_magnitude! ps, (0.2, 1.5), "Square"
    l_gfx_particle_acc_angle! ps, (-PI/2.0, -PI/2.0)
    l_gfx_particle_acc_magnitude! ps, (0.6, 2.0)

    l_gfx_particle_start_color! ps, (1.0, 1.0, 1.0)
    l_gfx_particle_end_color! ps, (1.0, 1.0, 1.0)

    l_gfx_particle_start_alpha! ps, (1.0, 1.0)
    l_gfx_particle_end_alpha! ps, (1.0, 1.0)
    l_gfx_particle_add_sprite! ps, game.coin_sprite(), (0, 0)

    ret ps
}

coin_at :: fn ps: (str, int), pos: [float] -> void {
    size := 0.4 / pos[2]
    x := pos[0] / pos[2]
    y := pos[1] / pos[2]

    size = l_random() * size
    l_gfx_particle_start_sx! ps, (size, size)
    l_gfx_particle_start_sy! ps, (size, size)
    l_gfx_particle_end_sx! ps, (size, size)
    l_gfx_particle_end_sy! ps, (size, size)

    l_gfx_particle_x! ps, (x, x)
    l_gfx_particle_y! ps, (y, y)
}
